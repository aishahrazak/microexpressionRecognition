dataset-csv/casme.csv :
    - paths for apex frames and its label based on the given mapping (CASME2-coding)

dataset-csv/samm.csv :
    - paths for apex frames and its label based on the given mapping (SAMM_Micro_FACS_Codes_v2)

dataset-csv/smic.csv :
    - automatically generated by datasetCompiler.ipynb

STEP 1
datasetCompiler.ipynb :
    - Create a CSV file of mapping between apex filename and label for SMIC
    - Copy apex frames from all datasets into 1 folder (consolidated folder)
    - renamed the frames and save the filename and label into cde.csv

STEP 2
datasetCompiler.ipynb :
    - Align, crop and resize apex frames to (224,224,3) listed in cde.csv
    - The pre-processed frames are copied to the pre-proc folder

STEP 3
datasetCompiler.ipynb :
    - Organized the pre-processed frames into subfolders based on its class/labels
    - This will make it easier for us to create the training and test sets later

STEP 4
resnet50.ipynb : 
    - Build resnet50 model with no top and its layers frozen
    - Add a Pooling layer and a classifier on top and train this using micro-expression dataset
    - Peng et al used resnet-10 with pre-trained weights from ImageNet dataset and then training on macro-expression dataset before fine-tuning on micro-expression datasets -> might try this

STEP 5
efficientnet.ipynb:
    - Build EfficientNet-B0, EfficientNet-B1, EfficientNet-B2 model with no top and its layers frozen
    - Add a Pooling layer and a classifier on top and train this using micro-expression dataset

